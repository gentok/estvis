% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/simu_pred.R
\name{plot_simu}
\alias{plot_simu}
\title{Plotting Simulated Outcome}
\usage{
plot_simu(predprof, name.x, addprof = NULL, name.est = "Mean",
  show.ci = TRUE, name.lowerCI = "lowerCI", name.upperCI = "upperCI",
  type.est = "auto", type.ci = "auto", name.facet.x = NULL,
  name.facet.y = NULL, name.color = NULL, name.linetype = NULL,
  name.fill = NULL, name.shape = NULL, line.width = 0.7,
  barpoint.gapwidth = 0.5, point.size = 2, errorbar.width = 0.5,
  ribbon.alpha = 0.5, label.color = "name.color",
  label.linetype = "name.linetype", label.fill = "name.fill",
  label.shape = "name.shape", label.x = "name.x", label.y = "auto",
  titletxt = NULL)
}
\arguments{
\item{predprof}{Predictions in either \code{simupred} (exported from \code{\link{simu_pred}} 
function), \code{data.frame} or \code{matrix} class. If in \code{data.frame} or \code{matrix},
it should have rows as predcion cases and columns for mean/median prediction, 
lower and upper confidence intervals (if \code{show.ci==TRUE}), and values for 
predictors that varies across profiles.}

\item{name.x}{Column name for the predictor to be on the x axis.}

\item{addprof}{Optional \code{data.frame} that adds or replaces values of predictor. 
Must have the same number of cases as \code{predprof}. If 
variable name is found in \code{predprof}, values are replaced. If not, additional variable 
is added to \code{predprof}. Added variables can be used in \code{name.x}, 
\code{name.color}, \code{name.linetype}, \code{name.fill}, and \code{name.shape}.
Define variable as \code{factor} if you want to control order of appearance in legend.}

\item{name.est}{Column name for mean/median prediction estiamte.}

\item{show.ci}{If \code{TRUE} (default), plot confidence intervals.}

\item{name.lowerCI}{Column name for the upper limit of confidence interval (applied if \code{show.ci==TRUE}).}

\item{name.upperCI}{Column name for the upper limit of confidence interval (applied if \code{show.ci==TRUE}).}

\item{type.est}{Plotting type of estimates. If \code{"auto"}, the type is determined automatically chosen by 
the class of the variable defined by \code{name.x}. If not, choose manually from \code{"line"}, \code{"bar"}, or \code{"point"}.}

\item{type.ci}{Plotting type of confidence intervals. If \code{"auto"}, the type is determined automatically chosen by 
the class of the variable defined by \code{name.x}. If not, choose manually from \code{"errorbar"} (Error Bars) or \code{"ribbon"} (Appropriate if \code{type.est == "line"}).}

\item{name.facet.x}{Column name for the predictor that controls facets horizontally (optional).}

\item{name.facet.y}{Column name for the predictor that controls facets vertically (optional).}

\item{name.color}{Column name for the predictor that controls line colors (optional).}

\item{name.linetype}{COlumn name for the predictor that controls line types (optional).}

\item{name.fill}{Column name for the predictor that controls fill colors (optional).}

\item{name.shape}{Column name for the predictor that controls point shapes (optional).}

\item{line.width}{The width of line in line plot.}

\item{barpoint.gapwidth}{The gap between bars/points if plot is clustered.}

\item{point.size}{The size of points in point plot.}

\item{errorbar.width}{The width of errorbar.}

\item{ribbon.alpha}{The transparency of ribbon plot.}

\item{label.color}{Optional label if \code{name.color==TRUE}. If \code{"name.color"}, the value assigned to \code{name.color} will be used for name in legend.}

\item{label.linetype}{Optional label if \code{name.linetype==TRUE}. If \code{"name.linetype"}, the value assigned to \code{name.linetype} will be used for name in legend.}

\item{label.fill}{Optional label if \code{name.fill==TRUE}. If \code{"name.fill"}, the value assigned to \code{name.fill} will be used for name in legend.}

\item{label.shape}{Optional label if \code{name.shape==TRUE}. If \code{"name.shape"}, the value assigned to \code{name.shape} will be used for name in legend.}

\item{label.x}{X axis label. If \code{"name.x"} (default), use the variable name defined in \code{name.x}.}

\item{label.y}{Y axis label. If \code{"auto"} (default) and \code{predprof} being 
\code{simupred} object, the label is automatically determined.}

\item{titletxt}{Title Text.}
}
\value{
\code{ggplot} object of simulated outcome plot.
}
\description{
Plotting Simulated Outcome
}
\examples{

## Load Data
library(pscl)
data(vote92)

## Recode Variables
vote92$voteBush <- as.numeric(
factor(vote92$vote,levels=c("Clinton","Bush")))*1 - 1
vote92$bushdis <- sqrt(vote92$bushdis)
vote92$clintondis <- sqrt(vote92$clintondis)

## Estimate Logistic Regression
fm <- formula(voteBush ~ dem + rep +
                clintondis + bushdis +
                persfinance + natlecon)
m <- glm(fm, data = vote92,
         family = binomial("logit"))

## Comparing Partisans

# Profile
prof1 <- data.frame(dem=c(1,0,0),rep=c(0,0,1))

# Prediction (Missing Variables are Fixed at Mean/Mode)
predprof1 <- simu_pred(m, prof1, y.label = "Bush Vote")
summary(predprof1)

# Additional Profile to Give Labels
addprof1 <- data.frame(pid=c("Democrat","Independent","Republican"))
addprof1$pid <- factor(addprof1$pid, levels=unique(addprof1$pid))

# Plot 
plot_simu(predprof1, name.x="pid", addprof=addprof1, label.x = "Party ID")
# Change it to Point Graph
plot_simu(predprof1, name.x="pid", addprof=addprof1, 
          label.x = "Party ID", type.est = "point")

## Comparing Effects of Ideological Distance by Party ID

# Profile
prof2 <- data.frame(dem=rep(rep(c(1,0,0),each=50),2),
                    rep=rep(rep(c(0,0,1),each=50),2),
                    bushdis=c(rep(seq(0,4,length=50),3), 
                              rep(0.5,150)),
                    clintondis=c(rep(0.5,150), 
                                 rep(seq(0,4,length=50),3)))

# Prediction (Missing Variables are Fixed at Mean/Mode)
predprof2 <- simu_pred(m, prof2, y.label = "Bush Vote")
summary(predprof2)

# Additional Profile to Give Labels
addprof2 <- data.frame(pid=rep(c("Democrat","Independent","Republican"),each=50),
                       dis=rep(seq(0,4,length=50),6),
                       labdis=rep(c("Ideological Distance from Bush",
                                    "Ideological Distance from Clinton"),each=150))
addprof2$pid <- factor(addprof2$pid, levels=rev(unique(addprof2$pid)))

# Plot 
plot_simu(predprof2, name.x="dis", addprof=addprof2,
          name.facet.x = "labdis", name.linetype="pid",
          label.x = NULL, label.linetype="Party ID")
# Change Color of CIs
plot_simu(predprof2, name.x="dis", addprof=addprof2,
          name.facet.x = "labdis", name.linetype="pid", name.fill="pid",
          label.x = NULL, label.linetype="Party ID")

}
